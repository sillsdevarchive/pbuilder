# This is the shared configuration file to be sourced by
#individual conf scripts

source /home/bob/pbuilder/targets

# Optionally set the architecture to the host architecture if none set. Note
# that you can set your own default (i.e. ${ARCH:="i386"}).

# Set the debootstrap variant to 'buildd' type.
# DEBOOTSTRAPOPTS[0]='--variant=buildd'
# or work around bug in debootstrap 3.0.0 (314858)
unset DEBOOTSTRAPOPTS

NAME="$DIST"

if [ -n "${ARCH}" ]; then
	NAME="$NAME-$ARCH"
	DEBOOTSTRAPOPTS=("--arch" "$ARCH" "${DEBOOTSTRAPOPTS[@]}")
fi

EXTRA=""
if [ -n "${VARIANT}" ]; then
	NAME="$NAME-$VARIANT"
fi

BASETGZ=/home/bob/pbuilder/base-$NAME.tgz

echo "name: $NAME"
echo "dist: $DIST"

#EXTRAPACKAGES=gcc3.0-athlon-builder
#export DEBIAN_BUILDARCH=athlon
BUILDPLACE=/home/bob/pbuilder/build/
#MIRRORSITE=ftp://192.168.1.3/repos/mirror/archive.ubuntu.com/ubuntu
MIRRORSITE=http://archive.ubuntu.com/ubuntu
#export http_proxy=http://your-proxy:8080/
OTHERMIRROR=""

echo "basetgz: $BASETGZ"

echo "variant: $VARIANT"
if [ "$VARIANT" = "new" ]; then
	OTHERMIRROR="deb http://packages.palaso.org/ubuntu $DIST main|"
elif [ "$VARIANT" = "lingnet" ]; then
	OTHERMIRROR="deb http://pso-ppa/ubuntu $DIST main|"
elif [ "$VARIANT" = "bp" ]; then
	OTHERMIRROR="deb http://badgerports.org lucid main|"
fi

echo "arch: $ARCH"

if [ -n "${TOONEW}" ]; then
	if [ "${DIST}" != "${TOONEW}" ]; then
		echo "dist $DIST not too new $TOONEW"
		OTHERMIRROR="${OTHERMIRROR}deb http://packages.sil.org/ubuntu $DIST main|"
	else
		echo "dist $DIST too new $TOONEW"
	fi
else
	echo "no dists too new"
	OTHERMIRROR="${OTHERMIRROR}deb http://packages.sil.org/ubuntu $DIST main|"
fi


OTHERMIRROR="${OTHERMIRROR}deb http://archive.ubuntu.com/ubuntu $DIST universe restricted multiverse"

echo "othermirror: $OTHERMIRROR"

#OTHERMIRROR="deb file:///media/MH40G/mirror/packages.sil.org/ubuntu hardy main"
USEPROC=yes
USEDEVPTS=yes
USEDEVFS=no
BUILDRESULT="/home/bob/pbuilder/results/$DIST"

echo "buildresult: $BUILDRESULT"

# specifying the distribution forces the distribution on "pbuilder update"
DISTRIBUTION=$DIST
# specifying the components of the distribution (default is "main")
#COMPONENTS="main restricted universe multiverse"
#specify the cache for APT
APTCACHE="/home/bob/pbuilder/aptcache/$DIST"
APTCACHEHARDLINK="yes"
REMOVEPACKAGES="lilo"
#HOOKDIR="/usr/lib/pbuilder/hooks"
HOOKDIR=""

# make debconf not interact with user
export DEBIAN_FRONTEND="noninteractive"

DEBEMAIL=""

#for pbuilder debuild
BUILDSOURCEROOTCMD="fakeroot"
PBUILDERROOTCMD="sudo"

# command to satisfy build-dependencies; the default is an internal shell
# implementation which is relatively slow; there's an alternate experimental
# implementation, "pbuilder-satisfydepends-experimental", which might be useful
# to pull packages from experimental or from repositories with a low APT Pin
# Priority
PBUILDERSATISFYDEPENDSCMD="/usr/lib/pbuilder/pbuilder-satisfydepends"

#default is to build everything. Passed on to dpkg-buildpackage
#DEBBUILDOPTS="-b"
if [ "$ARCH" = "i386" ]; then
	DEBBUILDOPTS="-b"
else
	DEBBUILDOPTS="-B"
fi

echo "debbuildopts: $DEBBUILDOPTS"


#APT configuration files directory
APTCONFDIR=""

# the username and ID used by pbuilder, inside chroot. Needs fakeroot, really
BUILDUSERID=1234
BUILDUSERNAME=pbuilder

# BINDMOUNTS is a space separated list of things to mount
# inside the chroot.
#BINDMOUNTS="/media/hosk_1"

# Set the PATH I am going to use inside pbuilder: default is "/usr/sbin:/usr/bin:/sbin:/bin:/usr/X11R6/bin"
export PATH="/usr/sbin:/usr/bin:/sbin:/bin:/usr/X11R6/bin"

# SHELL variable is used inside pbuilder by commands like 'su'; and they need sane values
export SHELL=/bin/bash

# The name of debootstrap command.
DEBOOTSTRAP="debootstrap"

# default file extension for pkgname-logfile
#PKGNAME_LOGFILE_EXTENTION="_$(dpkg --print-architecture).build"
PKGNAME_LOGFILE_EXTENTION="_$ARCH.build"

# default PKGNAME_LOGFILE
PKGNAME_LOGFILE=""

echo "Finished"
